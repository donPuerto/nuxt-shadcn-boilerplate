{
  // Vue language server configuration
  "vue.server.hybridMode": true,
  "vue.server.includeLanguages": [
    "vue",
    "markdown"
  ],
  // Formatting configuration
  "prettier.enable": false,
  "editor.formatOnSave": false,
  // Language-specific formatting settings
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // Default formatter for unlisted file types
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  // Auto-fix on save settings
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },
  // ESLint configuration
  "eslint.format.enable": true,
  // Enable the ESLint flat config support
  "eslint.useFlatConfig": true,
  // ESLint rule customizations to control formatting rules
  "eslint.rules.customizations": [
    {
      "rule": "style/*",
      "severity": "off"
    },
    {
      "rule": "format/*",
      "severity": "off"
    },
    // {
    //   "rule": "*-indent",
    //   "severity": "off"
    // },
    {
      "rule": "*-spacing",
      "severity": "off"
    },
    {
      "rule": "*-spaces",
      "severity": "off"
    },
    {
      "rule": "*-order",
      "severity": "off"
    },
    {
      "rule": "*-dangle",
      "severity": "off"
    },
    {
      "rule": "*-newline",
      "severity": "off"
    },
    {
      "rule": "*quotes",
      "severity": "off"
    },
    {
      "rule": "*semi",
      "severity": "off"
    }
  ],
  // File types that ESLint should validate
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml"
  ],
  // TailwindCSS configuration
  "tailwindCSS.experimental.classRegex": [
    [
      "cva\\(([^)]*)\\)",
      "[\"'`]([^\"'`]*).*?[\"'`]"
    ],
    [
      "cn\\(([^)]*)\\)",
      "[\"'`]([^\"'`]*).*?[\"'`]"
    ]
  ],
  // File associations
  "files.associations": {
    "*.md": "markdown",
    "*.css": "postcss"
  },
  // Disable TypeScript/JavaScript built-in validation in favor of ESLint
  "typescript.validate.enable": false,
  "javascript.validate.enable": false,
  // Spell checker dictionary
  "cSpell.words": [
    "Componente",
    "Consolas",
    "Español",
    "Fahrplan",
    "Français",
    "Hoja",
    "Inicio",
    "Komponente",
    "Menlo",
    "reka",
    "ruta",
    "Shadcn",
    "Startseite"
  ],
  // Editor behavior settings
  "files.autoSave": "onWindowChange",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "none",
  "workbench.startupEditor": "none",
  "explorer.compactFolders": false,
  // Extension management
  "extensions.autoUpdate": false,
  "extensions.autoCheckUpdates": false,
  // Performance settings
  "typescript.tsserver.maxTsServerMemory": 2048
}
